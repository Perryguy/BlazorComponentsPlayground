name: build-test-pack

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]   # e.g., v0.1.0
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        dotnet: [ '8.0.x', '10.0.x' ]   # build against LTS + latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet }}

      - name: Restore
        run: dotnet restore

      - name: Build (Release)
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: |
          if ls **/*Tests/*.csproj 1> /dev/null 2>&1; then
            dotnet test --configuration Release --no-build --collect:"XPlat Code Coverage"
          else
            echo "No test projects found. Skipping."
          fi

  pack:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '10.0.x'

      - name: Pack Overkill.UI
        run: dotnet pack Overkill.UI/Overkill.UI.csproj -c Release -o artifacts/nuget

      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: overkill-ui-nuget
          path: artifacts/nuget/*.nupkg

  publish:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: pack
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '10.0.x'

      - name: Pack (Release)
        run: dotnet pack Overkill.UI/Overkill.UI.csproj -c Release -o artifacts/nuget

      - name: Push to NuGet (nuget.org)
        run: dotnet nuget push "artifacts/nuget/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
