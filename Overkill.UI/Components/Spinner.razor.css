/* Base element */
.ok-spinner {
    display: inline-block;
    width: var(--ok-size-w, 2.5rem);
    height: var(--ok-size-h, 2.5rem);
    color: var(--ok-color, currentColor);
    /* Ensure transforms don’t blur on some GPUs */
    will-change: transform;
}

/* Label helpers */
.ok-label {
    margin-inline: .5rem;
}

.ok-sr {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0,0,0,0);
    white-space: nowrap;
    border: 0;
}

/* ===== Variant: Ring (classic border spinner) ===== */
.ok-spinner.ok-ring {
    border: var(--ok-thickness, .3rem) solid var(--ok-track, rgba(0,0,0,.12));
    border-top-color: var(--ok-color, currentColor);
    border-radius: 50%;
    animation: ok-spin var(--ok-speed, 1s) linear infinite;
}

/* ===== Variant: Dual ring (two colored arcs) ===== */
.ok-spinner.ok-dualring {
    box-sizing: border-box;
    border: var(--ok-thickness, .3rem) solid transparent;
    border-top-color: var(--ok-color, currentColor);
    border-bottom-color: var(--ok-color, currentColor);
    border-radius: 50%;
    animation: ok-spin var(--ok-speed, 1s) linear infinite;
}

/* ===== Variant: Dots (3 bouncing dots) ===== */
.ok-spinner.ok-dots {
    display: inline-flex;
    align-items: center;
    gap: calc(var(--ok-size-w, 2.5rem) * .12);
}

    .ok-spinner.ok-dots .ok-dot {
        width: calc(var(--ok-size-w, 2.5rem) * .18);
        height: calc(var(--ok-size-w, 2.5rem) * .18);
        border-radius: 50%;
        background: var(--ok-color, currentColor);
        animation: ok-bounce var(--ok-speed, 1s) ease-in-out infinite;
    }

        .ok-spinner.ok-dots .ok-dot:nth-child(2) {
            animation-delay: .15s;
        }

        .ok-spinner.ok-dots .ok-dot:nth-child(3) {
            animation-delay: .30s;
        }

/* ===== Variant: Bars (equalizer bars) ===== */
.ok-spinner.ok-bars {
    display: inline-flex;
    align-items: end;
    gap: calc(var(--ok-size-w, 2.5rem) * .06);
}

    .ok-spinner.ok-bars .ok-bar {
        width: calc(var(--ok-size-w, 2.5rem) * .12);
        height: calc(var(--ok-size-h, 2.5rem) * .2);
        background: var(--ok-color, currentColor);
        border-radius: .2rem;
        animation: ok-stretch var(--ok-speed, 1s) ease-in-out infinite;
    }

        .ok-spinner.ok-bars .ok-bar:nth-child(1) {
            animation-delay: 0.00s;
        }

        .ok-spinner.ok-bars .ok-bar:nth-child(2) {
            animation-delay: 0.10s;
        }

        .ok-spinner.ok-bars .ok-bar:nth-child(3) {
            animation-delay: 0.20s;
        }

        .ok-spinner.ok-bars .ok-bar:nth-child(4) {
            animation-delay: 0.30s;
        }

        .ok-spinner.ok-bars .ok-bar:nth-child(5) {
            animation-delay: 0.40s;
        }

/* Pause everything when ok-paused is present */
.ok-paused {
    animation-play-state: paused !important;
}

    /* Dots/Bars animations live on children, so pause them explicitly */
    .ok-paused .ok-dot,
    .ok-paused .ok-bar {
        animation-play-state: paused !important;
    }

    .ok-paused.ok-ring,
    .ok-paused.ok-dualring {
        animation-play-state: paused !important;
    }

/* ===== Animations ===== */
@keyframes ok-spin {
    to {
        transform: rotate(360deg);
    }
}

@keyframes ok-bounce {
    0%, 80%, 100% {
        transform: translateY(0);
        opacity: .6;
    }

    40% {
        transform: translateY(-35%);
        opacity: 1;
    }
}

@keyframes ok-stretch {
    0%, 40%, 100% {
        transform: scaleY(0.4);
    }

    20% {
        transform: scaleY(1.0);
    }
}

/* ===== Respect reduced motion (configurable) ===== */
@media (prefers-reduced-motion: reduce) {
    /* Only disable if the component asked us to (default true). We can’t read the param in CSS,
     so we key off a class the component could set. For simplicity, we just stop all motion. */
    .ok-spinner {
        animation: none !important;
    }

        .ok-spinner .ok-dot,
        .ok-spinner .ok-bar {
            animation: none !important;
        }
}
